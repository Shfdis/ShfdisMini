services:
  loginmanager:
    container_name: loginmanager
    environment:
      DB_USER: postgres
      DB_PASSWORD: postgres
      DB_HOST: db
    depends_on:
      - db
    build:
      context: ./LoginManager
      dockerfile: ./LoginManagerAPI/Dockerfile
    
  mailconfirmation:
    container_name: mailconfirmation
    depends_on:
      - db
    environment:
      MAIL_PASSWORD: ${MAIL_PASSWORD}
      DB_USER: postgres
      DB_PASSWORD: postgres
      DB_HOST: db
    build:
      context: ./MailConfirmation
      dockerfile: ./Dockerfile
  db:
    container_name: db
    image: postgres
    restart: always
    environment:
      POSTGRES_PASSWORD: postgres
      POSTGRES_USER: postgres
      POSTGRES_DB: shfdismini
    volumes:
      - pgdata:/var/lib/postgresql/data
  apigateway:
    container_name: apigateway
    depends_on:
      - loginmanager
      - mailconfirmation
    build:
      context: ./WebAPIGateway
      dockerfile: ./dockerfile
    environment:
      MAIL_HOST: http://mailconfirmation:8080
      LOGIN_HOST: http://loginmanager:8080
  frontend:
    container_name: frontend
    build:
      context: ./frontend
      dockerfile: ./dockerfile
    ports:
      - "3000:80"
volumes:
  pgdata:
